{"ast":null,"code":"const login = async (username, password) => {\n  try {\n    const response = await axios.post(\"/auth/login\", {\n      username,\n      password\n    });\n    const userData = {\n      token: response.data.token,\n      username\n    };\n    setUser(userData);\n    setError(\"\"); // Reset error state\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.error) {\n      setError(error.response.data.error);\n    } else {\n      setError(\"Invalid username or password\");\n    }\n    console.error(\"Login failed:\", error);\n  }\n};\nconst signup = async (username, password, email) => {\n  try {\n    const response = await axios.post(\"/auth/signup\", {\n      username,\n      password,\n      email\n    });\n    const userData = {\n      token: response.data.token,\n      username\n    };\n    setUser(userData);\n    setError(\"\"); // Reset error state\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.error) {\n      setError(error.response.data.error);\n    } else {\n      setError(\"Signup failed\");\n    }\n    console.error(\"Signup failed:\", error);\n  }\n};","map":{"version":3,"names":["login","username","password","response","axios","post","userData","token","data","setUser","setError","localStorage","setItem","JSON","stringify","error","console","signup","email"],"sources":["D:/CRIO/amazon-clone/amazon-clone/frontend/src/context/AuthContext.js"],"sourcesContent":["const login = async (username, password) => {\r\n  try {\r\n    const response = await axios.post(\"/auth/login\", {\r\n      username,\r\n      password,\r\n    });\r\n    const userData = { token: response.data.token, username };\r\n    setUser(userData);\r\n    setError(\"\"); // Reset error state\r\n    localStorage.setItem(\"user\", JSON.stringify(userData));\r\n  } catch (error) {\r\n    if (error.response && error.response.data && error.response.data.error) {\r\n      setError(error.response.data.error);\r\n    } else {\r\n      setError(\"Invalid username or password\");\r\n    }\r\n    console.error(\"Login failed:\", error);\r\n  }\r\n};\r\n\r\nconst signup = async (username, password, email) => {\r\n  try {\r\n    const response = await axios.post(\"/auth/signup\", {\r\n      username,\r\n      password,\r\n      email,\r\n    });\r\n    const userData = { token: response.data.token, username };\r\n    setUser(userData);\r\n    setError(\"\"); // Reset error state\r\n    localStorage.setItem(\"user\", JSON.stringify(userData));\r\n  } catch (error) {\r\n    if (error.response && error.response.data && error.response.data.error) {\r\n      setError(error.response.data.error);\r\n    } else {\r\n      setError(\"Signup failed\");\r\n    }\r\n    console.error(\"Signup failed:\", error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,aAAa,EAAE;MAC/CJ,QAAQ;MACRC;IACF,CAAC,CAAC;IACF,MAAMI,QAAQ,GAAG;MAAEC,KAAK,EAAEJ,QAAQ,CAACK,IAAI,CAACD,KAAK;MAAEN;IAAS,CAAC;IACzDQ,OAAO,CAACH,QAAQ,CAAC;IACjBI,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,IAAIA,KAAK,CAACZ,QAAQ,IAAIY,KAAK,CAACZ,QAAQ,CAACK,IAAI,IAAIO,KAAK,CAACZ,QAAQ,CAACK,IAAI,CAACO,KAAK,EAAE;MACtEL,QAAQ,CAACK,KAAK,CAACZ,QAAQ,CAACK,IAAI,CAACO,KAAK,CAAC;IACrC,CAAC,MAAM;MACLL,QAAQ,CAAC,8BAA8B,CAAC;IAC1C;IACAM,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;EACvC;AACF,CAAC;AAED,MAAME,MAAM,GAAG,MAAAA,CAAOhB,QAAQ,EAAEC,QAAQ,EAAEgB,KAAK,KAAK;EAClD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,cAAc,EAAE;MAChDJ,QAAQ;MACRC,QAAQ;MACRgB;IACF,CAAC,CAAC;IACF,MAAMZ,QAAQ,GAAG;MAAEC,KAAK,EAAEJ,QAAQ,CAACK,IAAI,CAACD,KAAK;MAAEN;IAAS,CAAC;IACzDQ,OAAO,CAACH,QAAQ,CAAC;IACjBI,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,IAAIA,KAAK,CAACZ,QAAQ,IAAIY,KAAK,CAACZ,QAAQ,CAACK,IAAI,IAAIO,KAAK,CAACZ,QAAQ,CAACK,IAAI,CAACO,KAAK,EAAE;MACtEL,QAAQ,CAACK,KAAK,CAACZ,QAAQ,CAACK,IAAI,CAACO,KAAK,CAAC;IACrC,CAAC,MAAM;MACLL,QAAQ,CAAC,eAAe,CAAC;IAC3B;IACAM,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACxC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}