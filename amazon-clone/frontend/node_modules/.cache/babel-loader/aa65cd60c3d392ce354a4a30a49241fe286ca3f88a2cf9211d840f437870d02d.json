{"ast":null,"code":"var _jsxFileName = \"D:\\\\CRIO\\\\amazon-clone\\\\amazon-clone\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"./axiosConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loginError, setLoginError] = useState(\"\");\n  const [signupError, setSignupError] = useState(\"\");\n  const clearErrors = () => {\n    setLoginError(\"\");\n    setSignupError(\"\");\n  };\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post(\"/auth/login\", {\n        username,\n        password\n      });\n      const userData = {\n        token: response.data.token,\n        username\n      };\n      setUser(userData);\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      clearErrors();\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error) {\n        setLoginError(error.response.data.error);\n      } else {\n        setLoginError(\"Invalid username or password\");\n      }\n    }\n  };\n  const signup = async (username, password, email) => {\n    try {\n      const response = await axios.post(\"/auth/signup\", {\n        username,\n        password,\n        email\n      });\n      const userData = {\n        token: response.data.token,\n        username\n      };\n      setUser(userData);\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      clearErrors();\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error) {\n        setSignupError(error.response.data.error);\n      } else {\n        setSignupError(\"Signup failed\");\n      }\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      signup,\n      logout,\n      loginError,\n      signupError,\n      clearErrors\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mKZ3UIVxfbwhBjgebrjKakUzHKc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loginError","setLoginError","signupError","setSignupError","clearErrors","storedUser","localStorage","getItem","JSON","parse","login","username","password","response","post","userData","token","data","setItem","stringify","error","signup","email","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CRIO/amazon-clone/amazon-clone/frontend/src/context/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"./axiosConfig\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const [signupError, setSignupError] = useState(\"\");\r\n\r\n  const clearErrors = () => {\r\n    setLoginError(\"\");\r\n    setSignupError(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await axios.post(\"/auth/login\", { username, password });\r\n      const userData = { token: response.data.token, username };\r\n      setUser(userData);\r\n      localStorage.setItem(\"user\", JSON.stringify(userData));\r\n      clearErrors();\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error) {\r\n        setLoginError(error.response.data.error);\r\n      } else {\r\n        setLoginError(\"Invalid username or password\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const signup = async (username, password, email) => {\r\n    try {\r\n      const response = await axios.post(\"/auth/signup\", {\r\n        username,\r\n        password,\r\n        email,\r\n      });\r\n      const userData = { token: response.data.token, username };\r\n      setUser(userData);\r\n      localStorage.setItem(\"user\", JSON.stringify(userData));\r\n      clearErrors();\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error) {\r\n        setSignupError(error.response.data.error);\r\n      } else {\r\n        setSignupError(\"Signup failed\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        login,\r\n        signup,\r\n        logout,\r\n        loginError,\r\n        signupError,\r\n        clearErrors,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}